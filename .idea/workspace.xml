<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="99a82ff1-2c66-4426-8635-4279aa315f0d" name="Changes" comment="Remove: 기존에 만들었던 SegmentTree 클래스 삭제">
      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/org/example/DataStructure/SegmentTreeTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/org/example/DataStructure/SegmentTreeTest.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <projects_view>
          <tree_state>
            <expand />
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 7
}]]></component>
  <component name="ProjectId" id="2WCASJk6EGMpP1nu7GCYGM1kybm" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "extract.method.default.visibility": "private",
    "last_opened_file_path": "/Users/u-keunsong/Desktop/Projects/study/Practice",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "settings.editor.selected.configurable": "reference.settingsdialog.project.gradle",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.Main" />
      <module name="untitled.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Main" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="99a82ff1-2c66-4426-8635-4279aa315f0d" name="Changes" comment="" />
      <created>1696226187176</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1696226187176</updated>
      <workItem from="1696226188252" duration="1000" />
      <workItem from="1696227593501" duration="5000" />
      <workItem from="1696316556363" duration="69478000" />
    </task>
    <task id="LOCAL-00001" summary="Refactor: SegmentTree 추상 골격 구현 클래스 생성&#10;&#10;SegmentTree 자료 구조에서 공통으로 사용되는 필드나 메서드를 인터페이스와 추상 클래스를 이용해서 모아놓고, 실제로 사용될 클래스에서는 이 추상 클래스를 상속받아서 사용할 수 있도록 구현해보았다.">
      <option name="closed" value="true" />
      <created>1696343162958</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1696343162958</updated>
    </task>
    <task id="LOCAL-00002" summary="Refactor: 추상 클래스 멤버 제어자 변경&#10;&#10;상속을 받을 클래스에서의 멤버를 변경할 수 있는 가변 멤버여야 하고, 생성자도 같이 상속 받기 위해 제어자를 private에서 protected로 수정">
      <option name="closed" value="true" />
      <created>1696745447145</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1696745447145</updated>
    </task>
    <task id="LOCAL-00003" summary="Feat: PrefixSumSegmentTree 클래스 구현&#10;&#10;AbstractSegmentTree 클래스를 상속받고, 기반 메서드인 generate, internalUpdate, internalIntervalValue 메서드를 구현">
      <option name="closed" value="true" />
      <created>1696749531727</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1696749531727</updated>
    </task>
    <task id="LOCAL-00004" summary="Feat: MinimumSegmentTree 클래스 구현(update 제외)&#10;&#10;AbstractSegmentTree 클래스를 상속받고, 기반 메서드인 generate, internalIntervalValue 메서드를 구현&#10;&#10;Fixes: update를 어떻게 구현할 것인지?">
      <option name="closed" value="true" />
      <created>1696751108110</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1696751108110</updated>
    </task>
    <task id="LOCAL-00005" summary="Remove: 기존에 만들었던 SegmentTree 클래스 삭제">
      <option name="closed" value="true" />
      <created>1696751142227</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1696751142227</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Refactor: SegmentTree 추상 골격 구현 클래스 생성&#10;&#10;SegmentTree 자료 구조에서 공통으로 사용되는 필드나 메서드를 인터페이스와 추상 클래스를 이용해서 모아놓고, 실제로 사용될 클래스에서는 이 추상 클래스를 상속받아서 사용할 수 있도록 구현해보았다." />
    <MESSAGE value="Refactor: 추상 클래스 멤버 제어자 변경&#10;&#10;상속을 받을 클래스에서의 멤버를 변경할 수 있는 가변 멤버여야 하고, 생성자도 같이 상속 받기 위해 제어자를 private에서 protected로 수정" />
    <MESSAGE value="Feat: PrefixSumSegmentTree 클래스 구현&#10;&#10;AbstractSegmentTree 클래스를 상속받고, 기반 메서드인 generate, internalUpdate, internalIntervalValue 메서드를 구현" />
    <MESSAGE value="Feat: MinimumSegmentTree 클래스 구현(update 제외)&#10;&#10;AbstractSegmentTree 클래스를 상속받고, 기반 메서드인 generate, internalIntervalValue 메서드를 구현&#10;&#10;Fixes: update를 어떻게 구현할 것인지?" />
    <MESSAGE value="Remove: 기존에 만들었던 SegmentTree 클래스 삭제" />
    <option name="LAST_COMMIT_MESSAGE" value="Remove: 기존에 만들었던 SegmentTree 클래스 삭제" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>